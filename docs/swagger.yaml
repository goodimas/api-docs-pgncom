openapi: 3.0.3
info:
  title: PGNCOM API Documentation
  description: |
    Selamat datang di dokumentasi resmi API PGNCOM  
    PT PGAS Telekomunikasi Nusantara (PGNCOM)

    Dokumentasi ini menyediakan referensi lengkap untuk seluruh layanan API yang tersedia di lingkungan PGNCOM. API ini dirancang untuk mendukung berbagai kebutuhan integrasi aplikasi, automasi proses bisnis, pengelolaan data internal, serta pengembangan layanan digital yang terhubung secara aman dan efisien.

    Melalui koleksi API yang telah disediakan, Anda dapat mengakses berbagai layanan utama PGNCOM seperti:
    - Autentikasi pengguna.
    - Manajemen user dan approval.
    - Integrasi layanan email gateway.
    - Layanan referensi data negara, kota, dan organisasi.
    - Penyimpanan dan manajemen file melalui MinIO Storage.
    - Layanan presensi (Attendance).
    - Dan layanan lainnya yang terus berkembang.

    Dokumentasi ini juga menyertakan panduan penggunaan, parameter, dan contoh request-response untuk memudahkan developer dalam implementasi dan integrasi ke sistem yang ada.
  version: "1.0.0"

servers:
  - url: https://api.pgncom.co.id

paths:
  /api/login:
    post:
      summary: Login
      description: |
        Endpoint untuk login pengguna.  
        Header **harus** menyertakan:
        - `Content-Type: application/json`
        - `API_TOKEN: {API_TOKEN dari environment}`

        Setelah login berhasil, server akan mengembalikan token yang **disimpan oleh backend ke dalam HttpOnly Cookie**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword
              required:
                - email
                - password
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              example:
                message: "Login success"
                token: "jwt_token_value"
        '401':
          description: Kredensial salah
      security: []

  /api/logout:
    post:
      summary: Logout
      description: |
        Endpoint untuk logout pengguna.  
        Header **harus** menyertakan:
        - `Content-Type: application/json`
        - `API_TOKEN: {API_TOKEN dari environment}`
        - `Authorization: Bearer {token dari login}`
        - `APP_TOKEN_CURRENT_APP: {token dari aplikasi aktif}`
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              example:
                message: "Logout success"
        '401':
          description: Token tidak valid atau tidak ditemukan
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/user:
    get:
      summary: Get All Users
      description: Mengambil semua data user tanpa filter.
      parameters: []
      responses:
        '200':
          description: Daftar semua user
          content:
            application/json:
              example:
                - nopek: "0014830044"
                  name: "User A"
                  email: "usera@example.com"
                - nopek: "0014830045"
                  name: "User B"
                  email: "userb@example.com"
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/user/{nopek}:
    get:
      summary: Get User by Nopek
      description: Mengambil data user berdasarkan nomor pekerja (nopek).
      parameters:
        - in: path
          name: nopek
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data user ditemukan
          content:
            application/json:
              example:
                nopek: "0014830044"
                name: "User A"
                email: "usera@example.com"
        '404':
          description: User tidak ditemukan
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/approval-user:
    get:
      summary: Get Approval User All
      description: Mengambil data approval semua user.
      responses:
        '200':
          description: Daftar approval user lengkap
          content:
            application/json:
              example:
                - user_nopek: "0014830044"
                  approvals:
                    - layer: 1
                      nopek: "0010000001"
                      name: "Atasan 1"
                    - layer: 2
                      nopek: "0010000002"
                      name: "Atasan 2"
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/approval-user/{nopek}:
    get:
      summary: Get Approval User by Nopek
      description: Mengambil data approval user berdasarkan nomor pekerja (nopek).
      parameters:
        - in: path
          name: nopek
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data approval user ditemukan
          content:
            application/json:
              example:
                user_nopek: "0014830044"
                approvals:
                  - layer: 1
                    nopek: "0010000001"
                    name: "Atasan 1"
                  - layer: 2
                    nopek: "0010000002"
                    name: "Atasan 2"
        '404':
          description: User tidak ditemukan
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/approval-user/{nopek}/{layers}:
    get:
      summary: Get Approval User by Nopek with Excluded Layers
      description: |
        Mengambil data approval user berdasarkan nomor pekerja (nopek) dengan mengecualikan layer tertentu.  
        Gunakan `&` sebagai pemisah.
      parameters:
        - in: path
          name: nopek
          required: true
          schema:
            type: string
        - in: path
          name: layers
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data approval user dengan layer tertentu dikecualikan
          content:
            application/json:
              example:
                user_nopek: "0014830044"
                excluded_layers: [1,2]
                approvals:
                  - layer: 3
                    nopek: "0010000003"
                    name: "Atasan 3"
        '404':
          description: User tidak ditemukan
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/approval/{layers}:
    get:
      summary: Get Approval User Except Certain Layers (All Users)
      description: |
        Mengambil data approval semua user dengan mengecualikan layer tertentu.
      parameters:
        - in: path
          name: layers
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data approval semua user dengan layer tertentu dikecualikan
          content:
            application/json:
              example:
                excluded_layers: [1,2]
                users:
                  - user_nopek: "0014830044"
                    approvals:
                      - layer: 3
                        nopek: "0010000003"
                        name: "Atasan 3"
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

  /api/mail-gateway:
    post:
      summary: Kirim Email via Mail Gateway
      description: |
        Endpoint untuk mengirim email melalui Mail Gateway PGNCOM.  
        Field `from` bersifat tetap dan tidak dapat diganti.

        Header **harus menyertakan**:
        - `Content-Type: application/json`
        - `Authorization: Bearer {token}`
        - `API_TOKEN: {API_TOKEN}`
        - `APP_TOKEN_CURRENT_APP: {APP_TOKEN dari aplikasi}`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                smtp_from:
                  type: string
                  example: noreply
                from:
                  type: string
                  example: noreply@pgncom.co.id
                from_name:
                  type: string
                  example: NOREPLY PGNCOM
                to:
                  type: array
                  items:
                    type: string
                  example: ["dimas.aria@pgncom.co.id"]
                cc:
                  type: array
                  items:
                    type: string
                bcc:
                  type: array
                  items:
                    type: string
                subject:
                  type: string
                  example: Test dari Development
                mail_body:
                  type: string
                  format: html
                  example: "<h1>Pengumuman Bahwa Dokumen Segera Ditandatangani</h1><p>Semoga harimu menyenangkan.</p>"
                queue_delay:
                  type: integer
                  example: 5
      responses:
        '200':
          description: Email berhasil dikirim
          content:
            application/json:
              example:
                message: "Email sent successfully"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
        - ApiKeyAuth: []
        - AppKeyAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: API_TOKEN
    AppKeyAuth:
      type: apiKey
      in: header
      name: APP_TOKEN_CURRENT_APP

security:
  - bearerAuth: []
  - ApiKeyAuth: []
  - AppKeyAuth: []
