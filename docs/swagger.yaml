openapi: 3.0.3
info:
  title: PGNCOM API Documentation
  description: |
    Selamat datang di dokumentasi resmi API PGNCOM  
    PT PGAS Telekomunikasi Nusantara (PGNCOM)

    Dokumentasi ini menyediakan referensi lengkap untuk seluruh layanan API yang tersedia di lingkungan PGNCOM. API ini dirancang untuk mendukung berbagai kebutuhan integrasi aplikasi, automasi proses bisnis, pengelolaan data internal, serta pengembangan layanan digital yang terhubung secara aman dan efisien.

    Melalui koleksi API yang telah disediakan, Anda dapat mengakses berbagai layanan utama PGNCOM seperti:
    - Autentikasi pengguna.
    - Manajemen user dan approval.
    - Integrasi layanan email gateway.
    - Layanan referensi data negara, kota, dan organisasi.
    - Penyimpanan dan manajemen file melalui MinIO Storage.
    - Layanan presensi (Attendance).
    - Dan layanan lainnya yang terus berkembang.

    Dokumentasi ini juga menyertakan panduan penggunaan, parameter, dan contoh request-response untuk memudahkan developer dalam implementasi dan integrasi ke sistem yang ada.
  version: "1.0.0"

servers:
  - url: https://api.pgncom.co.id

paths:
  /api/login:
    post:
      summary: Login
      description: |
        Endpoint untuk login pengguna.

        Header wajib:
        - `Content-Type: application/json`
        - `API_TOKEN: {API_TOKEN}`

        Setelah login berhasil, backend akan menyimpan token ke dalam HttpOnly cookie.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword
              required:
                - email
                - password
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              example:
                message: "Login success"
                token: "jwt_token_value"
        '401':
          description: Kredensial salah

  /api/logout:
    post:
      summary: Logout
      description: |
        Endpoint untuk logout pengguna.

        Header wajib:
        - `Content-Type: application/json`
        - `Authorization: Bearer {token}`
        - `API_TOKEN: {API_TOKEN}`

      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              example:
                message: "Logout success"
        '401':
          description: Token tidak valid

  /api/user:
    get:
      summary: Get All Users
      description: Mengambil seluruh daftar user.
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

  /api/user/{nopek}:
    get:
      summary: Get User by Nopek
      description: Mengambil data user berdasarkan nomor pekerja (nopek).
      parameters:
        - name: nopek
          in: path
          required: true
          schema:
            type: string
            example: "0014830044"
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

  /api/approval-user:
    get:
      summary: Get All Approval Users
      description: Mendapatkan seluruh informasi atasan dari semua user (layer rendah hingga tertinggi).
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

  /api/approval-user/{nopek}:
    get:
      summary: Get Approval User by Nopek
      description: Mendapatkan atasan dari user berdasarkan nomor pekerja (nopek).
      parameters:
        - name: nopek
          in: path
          required: true
          schema:
            type: string
            example: "0014830044"
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

  /api/approval-user/{nopek}/{exceptLayer}:
    get:
      summary: Get Approval User by Nopek (Exclude Layer)
      description: Mendapatkan atasan dari user dengan pengecualian layer tertentu (misal: 1&2).
      parameters:
        - name: nopek
          in: path
          required: true
          schema:
            type: string
            example: "0014830044"
        - name: exceptLayer
          in: path
          required: true
          schema:
            type: string
            example: "1&2"
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

  /api/approval/{exceptLayer}:
    get:
      summary: Get All Approval (Exclude Layer)
      description: Mendapatkan semua approval user dengan pengecualian layer tertentu.
      parameters:
        - name: exceptLayer
          in: path
          required: true
          schema:
            type: string
            example: "1&2"
      responses:
        '200':
          description: Sukses
      security:
        - BearerWithToken: []

components:
  securitySchemes:
    BearerWithToken:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Format: `Bearer {token}`  
        Tambahkan juga header:
        - `Content-Type: application/json`
        - `API_TOKEN: {API_TOKEN dari environment}`
